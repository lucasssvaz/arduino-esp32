name: Wokwi tests

on:
  workflow_run:
    workflows: ["Runtime Tests"]
    types:
      - completed

# No permissions by default
permissions: {}

env:
  WOKWI_TIMEOUT: 600000 # Milliseconds

jobs:
  wokwi-test:
    name: Wokwi ${{ matrix.chip }} ${{ matrix.type }} tests
    if: github.event.workflow_run.conclusion != 'skipped'
    runs-on: ubuntu-latest
    env:
      id: ${{ github.event.workflow_run.head_sha }}-${{ matrix.chip }}-${{ matrix.type }}
    permissions:
      contents: read
      actions: read
      statuses: write
    strategy:
      fail-fast: false
      matrix:
        type: ['validation']
        chip: ['esp32', 'esp32s2', 'esp32s3', 'esp32c3', 'esp32c6', 'esp32h2']
    steps:
      - name: Report pending
        uses: actions/github-script@v7
        with:
          script: |
            const owner = '${{ github.repository_owner }}';
            const repo = '${{ github.repository }}'.split('/')[1];
            const sha = '${{ github.event.workflow_run.head_sha }}';
            core.debug(`owner: ${owner}`);
            core.debug(`repo: ${repo}`);
            core.debug(`sha: ${sha}`);
            const { context: name, state } = (await github.rest.repos.createCommitStatus({
              context: 'Runtime Tests / Wokwi (${{ matrix.type }}, ${{ matrix.chip }})',
              owner: owner,
              repo: repo,
              sha: sha,
              state: 'pending',
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })).data;
            core.info(`${name} is ${state}`);

      - name: Check if already run
        id: get-cache-results
        uses: actions/cache/restore@v4
        with:
          key: tests-${{ env.id }}-results-wokwi
          path: |
            tests/**/*.xml
            tests/**/result_*.json

      - name: Evaluate if tests should be run
        id: check-tests
        run: |
          cache_exists=${{ steps.get-cache-results.outputs.cache-hit == 'true' }}
          enabled=true

          if [[ $cache_exists == 'true' ]]; then
            echo "Already ran, skipping"
            enabled=false
          fi

          echo "enabled=$enabled" >> $GITHUB_OUTPUT

      - name: Checkout user repository
        if: ${{ steps.check-tests.outputs.enabled == 'true' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          persist-credentials: false
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            /*
            !.github

      # To avoid giving unknown scripts elevated permissions, download them from the master branch
      - name: Get CI scripts from master
        if: ${{ steps.check-tests.outputs.enabled == 'true' }}
        run: |
          mkdir -p .github
          cd .github
          curl https://codeload.github.com/${{ github.repository }}/tar.gz/master | tar -xz --strip=2 arduino-esp32-master/.github

      - uses: actions/setup-python@v5
        if: ${{ steps.check-tests.outputs.enabled == 'true' }}
        with:
          cache-dependency-path: tests/requirements.txt
          cache: 'pip'
          python-version: '3.x'

      - name: Install dependencies
        if: ${{ steps.check-tests.outputs.enabled == 'true' }}
        run: |
          pip install -U pip
          pip install -r tests/requirements.txt --extra-index-url https://dl.espressif.com/pypi

      - name: Install Wokwi CLI
        if: ${{ steps.check-tests.outputs.enabled == 'true' }}
        run: curl -L https://wokwi.com/ci/install.sh | sh

      - name: Wokwi CI Server
        if: ${{ steps.check-tests.outputs.enabled == 'true' }}
        uses: wokwi/wokwi-ci-server-action@v1

      - name: Get binaries
        if: ${{ steps.check-tests.outputs.enabled == 'true' }}
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          name: tests-bin-${{ matrix.chip }}-${{ matrix.type }}
          path: |
            ~/.arduino/tests

      - name: Run Tests
        if: ${{ steps.check-tests.outputs.enabled == 'true' }}
        env:
          WOKWI_CLI_TOKEN: ${{ secrets.WOKWI_CLI_TOKEN }}
        run: |
          bash .github/scripts/tests_run.sh -c -type ${{ matrix.type }} -t ${{ matrix.chip }} -i 0 -m 1 -W ${{ env.WOKWI_TIMEOUT }}

      - name: Upload ${{ matrix.chip }} ${{ matrix.type }} Wokwi results as cache
        uses: actions/cache/save@v4
        if: ${{ always() && steps.check-tests.outputs.enabled == 'true' }}
        with:
          key: tests-${{ env.id }}-results-wokwi
          path: |
            tests/**/*.xml
            tests/**/result_*.json

      - name: Upload ${{ matrix.chip }} ${{ matrix.type }} Wokwi results as artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tests-results-wokwi-${{ matrix.chip }}-${{ matrix.type }}
          overwrite: true
          path: |
            tests/**/*.xml
            tests/**/result_*.json

      - name: Report conclusion
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const owner = '${{ github.repository_owner }}';
            const repo = '${{ github.repository }}'.split('/')[1];
            const sha = '${{ github.event.workflow_run.head_sha }}';
            core.debug(`owner: ${owner}`);
            core.debug(`repo: ${repo}`);
            core.debug(`sha: ${sha}`);
            const { context: name, state } = (await github.rest.repos.createCommitStatus({
              context: 'Runtime Tests / Wokwi (${{ matrix.type }}, ${{ matrix.chip }})',
              owner: owner,
              repo: repo,
              sha: sha,
              state: '${{ job.status }}',
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })).data;
            core.info(`${name} is ${state}`);
